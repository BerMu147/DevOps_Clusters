version: '3.7'

services:
  agent:
    image: portainer/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - portainer_agent_network
    deploy:
      mode: global
      placement:
        constraints:
          - node.platform.os == linux

  portainer:
    image: portainer/portainer-ce:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - portainer-data:/data
    networks:
      - portainer_agent_network
      - portainer_public
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer_portainer.entrypoints=web"
        - "traefik.http.routers.portainer_portainer.rule=Host(`portainer.example.com`)"
        - "traefik.http.routers.portainer_portainer.middlewares=traefik-https-redirect@file"
        - "traefik.http.routers.portainer_portainer-secure.entrypoints=websecure"
        - "traefik.http.routers.portainer_portainer-secure.rule=Host(`portainer.example.com`)"
        - "traefik.http.routers.portainer_portainer-secure.tls=true"
        - "traefik.http.services.portainer_portainer.loadbalancer.server.port=9000"
        - "traefik.http.routers.portainer_portainer-secure.service=portainer_portainer"
        - "traefik.docker.network=portainer_agent_network"
        - "traefik.http.routers.portainer_portainer-secure.tls.certresolver=myresolver"

        # - "traefik.http.routers.edge-portainer.entrypoints=web"
        # - "traefik.http.routers.edge-portainer.rule=Host(`edge.portainer.example.com`)"
        # - "traefik.http.routers.edge-portainer.middlewares=traefik-https-redirect@file"
        # - "traefik.http.routers.edge-portainer-secure.entrypoints=websecure"
        # - traefik.http.routers.edge-portainer-secure.service=edge-portainer
        # - traefik.http.routers.edge-portainer-secure.rule=Host(`edge.portainer.example.com`)
        # - traefik.http.services.edge-portainer.loadbalancer.server.port=8000
        # - traefik.http.routers.edge-portainer.service=edge-portainer
        # - traefik.http.routers.edge-portainer.tls.certresolver=myresolver
        # - traefik.http.routers.edge-portainer.tls.passthrough=true

        - traefik.http.routers.edge-portainer.rule=Host(`edge.portainer.example.com`)
        - traefik.http.services.edge-portainer.loadbalancer.server.port=8000
        - traefik.http.routers.edge-portainer.service=edge-portainer
        - traefik.http.routers.edge-portainer.tls.certresolver=myresolver
        - traefik.http.middlewares.edge-portainer-redirect.redirectregex.regex=^http://(.*)
        - traefik.http.middlewares.edge-portainer-redirect.redirectregex.replacement=https://$${1}
        - traefik.http.services.http.loadbalancer.server.port=80
        
        # - "traefik.tcp.routers.ws-portainer_portainer.rule=HostSNI(`portainer.example.com`)"
        # - "traefik.tcp.services.ws-portainer_portainer.loadbalancer.server.port=8000"
        # - "traefik.tcp.routers.ws-portainer_portainer.entrypoints=portainer_portainer"
        # # - "traefik.tcp.routers.ws-portainer_portainer.tls.certresolver=myresolver"
        # # - "traefik.tcp.routers.ws-portainer_portainer.tls.passthrough=true"
        # - "traefik.tcp.routers.ws-portainer_portainer.service=ws-portainer_portainer"

        # - "traefik.http.routers.ws-portainer_portainer.entrypoints=web"
        # - "traefik.http.routers.ws-portainer_portainer.rule=Host(`edge.portainer.example.com`)"
        # - "traefik.http.routers.ws-portainer_portainer.middlewares=traefik-https-redirect@file"
        # - "traefik.http.routers.ws-portainer_portainer-secure.entrypoints=websecure"
        # - "traefik.http.routers.ws-portainer_portainer-secure.rule=Host(`edge.portainer.example.com`)"
        # - "traefik.http.routers.ws-portainer_portainer-secure.tls=true"
        # - "traefik.http.services.ws-portainer_portainer.loadbalancer.server.port=8000"
        # - "traefik.http.routers.ws-portainer_portainer-secure.service=ws-portainer_portainer"
        # - "traefik.http.routers.ws-portainer_portainer-secure.tls.certresolver=myresolver"


networks:
  portainer_agent_network:
    external: true
  portainer_public:
    external: true

volumes:
  portainer-data: {}
